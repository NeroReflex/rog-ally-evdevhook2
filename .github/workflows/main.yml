name: Build ROG Ally evdevhook2

on:
  push:
    branches: [ main ]
    tags: '*'
  workflow_dispatch:

env:
  PKGDEST: "/tmp/pkg"
  BUILDDIR: "/tmp/build"

jobs:
  build-pkg:
    runs-on: ubuntu-latest
    outputs:
      full_version: ${{ steps.set-pkg-version.outputs.full_version }}

    container: archlinux:base-devel

    steps:
      - uses: actions/checkout@v3
      - name: Create build user
        run: |
          useradd -m build
          mkdir /home/build/pkg
          cp -v * /home/build/pkg/
          chown -vR build /home/build/pkg
          rm /home/build/pkg/README.md
      - name: Set up pacman keyring
        run: |
          pacman-key --init
          pacman-key --populate archlinux
          mkdir -p /etc/gnupg && echo "auto-key-retrieve" >> /etc/gnupg/gpg.conf
          echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist\n" >> /etc/pacman.conf
      - name: Set up git
        run: |
          pacman -Syu --noconfirm git
      - name: Set up wget
        run: |
          pacman -Syu --noconfirm wget
      - name: Install rog-ally-montion-evdev
        run: |
          wget https://github.com/NeroReflex/rog-ally-motion-evdev/releases/download/v1.0.0-fix/rog-ally-motion-evdev-1.0.0-1-x86_64.pkg.tar.zst
          pacman -U --noconfirm *.tar.zst
      - name: Generate .SRCINFO
        run: |
          su build bash -c "cd /home/build/pkg && makepkg --printsrcinfo > /home/build/pkg/.SRCINFO"
          sed -i 's/	depends = rog-ally-motion-evdev\n//g' INPUTFILE
      - name: Install dependencies
        run: |
          pacman -Syu --noconfirm $(sed -n -e 's/^[[:space:]]*\(make\)\?depends\(_x86_64\)\? = \([[:alnum:][:punct:]]*\)[[:space:]]*$/\3/p' /home/build/pkg/.SRCINFO)
      - name: Build Package
        id: build-package
        shell: bash
        run: |
          su build bash -c "cd /home/build/pkg  && MAKEFLAGS=-j$(nproc) makepkg -sf -- --skippgpcheck --noconfirm"
      - name: Set package version
        id: set-pkg-version
        shell: bash
        run: |
          . /home/build/pkg/PKGBUILD
          full_version=${pkgver}-${pkgrel}
          echo "full_version=$full_version" >> "$GITHUB_OUTPUT"
      - name: Upload package artifact
        uses: actions/upload-artifact@v3
        with:
          name: pkg-upload
          path: |
            ${{ env.PKGDEST }}/*.pkg.tar.zst
          if-no-files-found: error

  make-release:
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) ||
      (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    needs: [build-pkg]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: pkg-upload
          path: ${{ env.PKGDEST }}
      - name: Make release
        uses: softprops/action-gh-release@v1
        with:
          name: pkg-release-${{needs.build-pkg.outputs.full_version}}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: true
          fail_on_unmatched_files: true
          files: |
            ${{ env.PKGDEST }}/*.pkg.tar.zst